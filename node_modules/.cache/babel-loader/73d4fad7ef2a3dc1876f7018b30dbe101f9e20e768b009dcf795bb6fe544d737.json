{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\si.izzo\\\\Desktop\\\\multiagent-platform-ui\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// App.jsx - Main container component\nimport React, { useState } from 'react';\nimport { Header } from './components/Header';\nimport { WorkspaceManager } from './components/WorkspaceManager';\nimport { ConfigurationPanel } from './components/ConfigurationPanel';\nimport { Toolbar } from './components/Toolbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [agents, setAgents] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState(null);\n  const [workspaceConfig, setWorkspaceConfig] = useState({\n    zoom: 1,\n    panX: 0,\n    panY: 0,\n    showGrid: true,\n    snapToGrid: true\n  });\n  const handleAgentCreate = agentType => {\n    const newAgent = {\n      id: `agent-${Date.now()}`,\n      type: agentType,\n      name: `New ${agentType}`,\n      position: {\n        x: 100,\n        y: 100\n      },\n      role: 'explorer',\n      // Default role\n      parameters: {},\n      knowledgeBase: null\n    };\n    setAgents([...agents, newAgent]);\n    setSelectedAgent(newAgent.id);\n  };\n  const handleAgentSelect = agentId => {\n    setSelectedAgent(agentId);\n  };\n  const handleAgentUpdate = (agentId, updates) => {\n    setAgents(agents.map(agent => agent.id === agentId ? {\n      ...agent,\n      ...updates\n    } : agent));\n  };\n  const handleAgentDelete = agentId => {\n    setAgents(agents.filter(agent => agent.id !== agentId));\n\n    // Also remove any connections involving this agent\n    setConnections(connections.filter(conn => conn.source !== agentId && conn.target !== agentId));\n    if (selectedAgent === agentId) {\n      setSelectedAgent(null);\n    }\n  };\n  const handleConnectionCreate = (sourceId, targetId) => {\n    // Check if connection already exists\n    const connectionExists = connections.some(conn => conn.source === sourceId && conn.target === targetId);\n    if (!connectionExists && sourceId !== targetId) {\n      const newConnection = {\n        id: `conn-${Date.now()}`,\n        source: sourceId,\n        target: targetId,\n        type: 'default' // Can be extended for different connection types\n      };\n      setConnections([...connections, newConnection]);\n    }\n  };\n  const handleConnectionDelete = connectionId => {\n    setConnections(connections.filter(conn => conn.id !== connectionId));\n  };\n  const handleWorkspaceConfig = updates => {\n    setWorkspaceConfig({\n      ...workspaceConfig,\n      ...updates\n    });\n  };\n  const handleSaveWorkspace = () => {\n    const workspace = {\n      agents,\n      connections,\n      config: workspaceConfig\n    };\n    const workspaceJson = JSON.stringify(workspace);\n    localStorage.setItem('multiagent-workspace', workspaceJson);\n\n    // In a real application, you would likely save to a server\n    console.log('Workspace saved', workspace);\n  };\n  const handleLoadWorkspace = () => {\n    const savedWorkspace = localStorage.getItem('multiagent-workspace');\n    if (savedWorkspace) {\n      try {\n        const workspace = JSON.parse(savedWorkspace);\n        setAgents(workspace.agents || []);\n        setConnections(workspace.connections || []);\n        setWorkspaceConfig(workspace.config || workspaceConfig);\n        setSelectedAgent(null);\n      } catch (error) {\n        console.error('Failed to load workspace', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onSave: handleSaveWorkspace,\n      onLoad: handleLoadWorkspace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        onAgentCreate: handleAgentCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WorkspaceManager, {\n        agents: agents,\n        connections: connections,\n        selectedAgent: selectedAgent,\n        workspaceConfig: workspaceConfig,\n        onAgentSelect: handleAgentSelect,\n        onAgentUpdate: handleAgentUpdate,\n        onAgentDelete: handleAgentDelete,\n        onConnectionCreate: handleConnectionCreate,\n        onConnectionDelete: handleConnectionDelete,\n        onWorkspaceConfig: handleWorkspaceConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), selectedAgent && /*#__PURE__*/_jsxDEV(ConfigurationPanel, {\n        agent: agents.find(a => a.id === selectedAgent),\n        onUpdate: updates => handleAgentUpdate(selectedAgent, updates),\n        onClose: () => setSelectedAgent(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UU1FUUqrLQGKURkO/nGScnjKKC4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","WorkspaceManager","ConfigurationPanel","Toolbar","jsxDEV","_jsxDEV","App","_s","agents","setAgents","connections","setConnections","selectedAgent","setSelectedAgent","workspaceConfig","setWorkspaceConfig","zoom","panX","panY","showGrid","snapToGrid","handleAgentCreate","agentType","newAgent","id","Date","now","type","name","position","x","y","role","parameters","knowledgeBase","handleAgentSelect","agentId","handleAgentUpdate","updates","map","agent","handleAgentDelete","filter","conn","source","target","handleConnectionCreate","sourceId","targetId","connectionExists","some","newConnection","handleConnectionDelete","connectionId","handleWorkspaceConfig","handleSaveWorkspace","workspace","config","workspaceJson","JSON","stringify","localStorage","setItem","console","log","handleLoadWorkspace","savedWorkspace","getItem","parse","error","className","children","onSave","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","onAgentCreate","onAgentSelect","onAgentUpdate","onAgentDelete","onConnectionCreate","onConnectionDelete","onWorkspaceConfig","find","a","onUpdate","onClose","_c","$RefreshReg$"],"sources":["C:/Users/si.izzo/Desktop/multiagent-platform-ui/src/App.jsx"],"sourcesContent":["// App.jsx - Main container component\nimport React, { useState } from 'react';\nimport { Header } from './components/Header';\nimport { WorkspaceManager } from './components/WorkspaceManager';\nimport { ConfigurationPanel } from './components/ConfigurationPanel';\nimport { Toolbar } from './components/Toolbar';\n\nconst App = () => {\n  const [agents, setAgents] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState(null);\n  const [workspaceConfig, setWorkspaceConfig] = useState({\n    zoom: 1,\n    panX: 0,\n    panY: 0,\n    showGrid: true,\n    snapToGrid: true,\n  });\n\n  const handleAgentCreate = (agentType) => {\n    const newAgent = {\n      id: `agent-${Date.now()}`,\n      type: agentType,\n      name: `New ${agentType}`,\n      position: { x: 100, y: 100 },\n      role: 'explorer', // Default role\n      parameters: {},\n      knowledgeBase: null,\n    };\n    \n    setAgents([...agents, newAgent]);\n    setSelectedAgent(newAgent.id);\n  };\n\n  const handleAgentSelect = (agentId) => {\n    setSelectedAgent(agentId);\n  };\n\n  const handleAgentUpdate = (agentId, updates) => {\n    setAgents(agents.map(agent => \n      agent.id === agentId ? { ...agent, ...updates } : agent\n    ));\n  };\n\n  const handleAgentDelete = (agentId) => {\n    setAgents(agents.filter(agent => agent.id !== agentId));\n    \n    // Also remove any connections involving this agent\n    setConnections(connections.filter(\n      conn => conn.source !== agentId && conn.target !== agentId\n    ));\n    \n    if (selectedAgent === agentId) {\n      setSelectedAgent(null);\n    }\n  };\n\n  const handleConnectionCreate = (sourceId, targetId) => {\n    // Check if connection already exists\n    const connectionExists = connections.some(\n      conn => conn.source === sourceId && conn.target === targetId\n    );\n    \n    if (!connectionExists && sourceId !== targetId) {\n      const newConnection = {\n        id: `conn-${Date.now()}`,\n        source: sourceId,\n        target: targetId,\n        type: 'default', // Can be extended for different connection types\n      };\n      \n      setConnections([...connections, newConnection]);\n    }\n  };\n\n  const handleConnectionDelete = (connectionId) => {\n    setConnections(connections.filter(conn => conn.id !== connectionId));\n  };\n\n  const handleWorkspaceConfig = (updates) => {\n    setWorkspaceConfig({ ...workspaceConfig, ...updates });\n  };\n\n  const handleSaveWorkspace = () => {\n    const workspace = {\n      agents,\n      connections,\n      config: workspaceConfig,\n    };\n    \n    const workspaceJson = JSON.stringify(workspace);\n    localStorage.setItem('multiagent-workspace', workspaceJson);\n    \n    // In a real application, you would likely save to a server\n    console.log('Workspace saved', workspace);\n  };\n\n  const handleLoadWorkspace = () => {\n    const savedWorkspace = localStorage.getItem('multiagent-workspace');\n    \n    if (savedWorkspace) {\n      try {\n        const workspace = JSON.parse(savedWorkspace);\n        setAgents(workspace.agents || []);\n        setConnections(workspace.connections || []);\n        setWorkspaceConfig(workspace.config || workspaceConfig);\n        setSelectedAgent(null);\n      } catch (error) {\n        console.error('Failed to load workspace', error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col\">\n      <Header onSave={handleSaveWorkspace} onLoad={handleLoadWorkspace} />\n      \n      <div className=\"flex flex-1 overflow-hidden\">\n        <Toolbar onAgentCreate={handleAgentCreate} />\n        \n        <WorkspaceManager\n          agents={agents}\n          connections={connections}\n          selectedAgent={selectedAgent}\n          workspaceConfig={workspaceConfig}\n          onAgentSelect={handleAgentSelect}\n          onAgentUpdate={handleAgentUpdate}\n          onAgentDelete={handleAgentDelete}\n          onConnectionCreate={handleConnectionCreate}\n          onConnectionDelete={handleConnectionDelete}\n          onWorkspaceConfig={handleWorkspaceConfig}\n        />\n        \n        {selectedAgent && (\n          <ConfigurationPanel\n            agent={agents.find(a => a.id === selectedAgent)}\n            onUpdate={(updates) => handleAgentUpdate(selectedAgent, updates)}\n            onClose={() => setSelectedAgent(null)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}