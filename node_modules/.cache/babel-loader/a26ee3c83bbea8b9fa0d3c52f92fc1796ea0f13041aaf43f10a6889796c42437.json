{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\si.izzo\\\\Desktop\\\\multiagent-platform-ui\\\\src\\\\components\\\\ConfigurationPanel.jsx\",\n  _s = $RefreshSig$();\n// components/ConfigurationPanel.jsx\nimport React, { useState, useEffect } from 'react';\nimport { X } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConfigurationPanel = ({\n  agent,\n  onUpdate,\n  onClose\n}) => {\n  _s();\n  var _roles$find;\n  const [formState, setFormState] = useState({\n    name: '',\n    role: '',\n    parameters: {},\n    knowledgeBase: null\n  });\n\n  // Initialize form with agent data when selected agent changes\n  useEffect(() => {\n    if (agent) {\n      setFormState({\n        name: agent.name || '',\n        role: agent.role || 'explorer',\n        parameters: {\n          ...agent.parameters\n        } || {},\n        knowledgeBase: agent.knowledgeBase || null\n      });\n    }\n  }, [agent]);\n\n  // Available agent roles\n  const roles = [{\n    id: 'explorer',\n    name: 'Explorer',\n    description: 'Searches for information and resources'\n  }, {\n    id: 'planner',\n    name: 'Planner',\n    description: 'Creates strategies and coordinates tasks'\n  }, {\n    id: 'communicator',\n    name: 'Communicator',\n    description: 'Interfaces with users and other agents'\n  }, {\n    id: 'thinker',\n    name: 'Thinker',\n    description: 'Analyzes data and makes decisions'\n  }, {\n    id: 'storage',\n    name: 'Storage',\n    description: 'Stores and retrieves knowledge'\n  }, {\n    id: 'executor',\n    name: 'Executor',\n    description: 'Performs actions in the environment'\n  }];\n\n  // Available knowledge bases\n  const knowledgeBases = [{\n    id: 'general',\n    name: 'General Knowledge'\n  }, {\n    id: 'specialized',\n    name: 'Specialized Domain'\n  }, {\n    id: 'custom',\n    name: 'Custom Database'\n  }];\n\n  // Define parameter templates for each role\n  const roleParameters = {\n    explorer: [{\n      id: 'searchDepth',\n      name: 'Search Depth',\n      type: 'number',\n      default: 3\n    }, {\n      id: 'explorationRate',\n      name: 'Exploration Rate',\n      type: 'number',\n      default: 0.7\n    }],\n    planner: [{\n      id: 'planningHorizon',\n      name: 'Planning Horizon',\n      type: 'number',\n      default: 5\n    }, {\n      id: 'optimizationGoal',\n      name: 'Optimization Goal',\n      type: 'select',\n      options: ['efficiency', 'accuracy', 'speed'],\n      default: 'efficiency'\n    }],\n    communicator: [{\n      id: 'messageFormat',\n      name: 'Message Format',\n      type: 'select',\n      options: ['json', 'text', 'binary'],\n      default: 'json'\n    }, {\n      id: 'communicationFrequency',\n      name: 'Communication Frequency',\n      type: 'number',\n      default: 1\n    }],\n    thinker: [{\n      id: 'reasoningDepth',\n      name: 'Reasoning Depth',\n      type: 'number',\n      default: 3\n    }, {\n      id: 'confidenceThreshold',\n      name: 'Confidence Threshold',\n      type: 'number',\n      default: 0.8\n    }],\n    storage: [{\n      id: 'storageCapacity',\n      name: 'Storage Capacity',\n      type: 'number',\n      default: 1000\n    }, {\n      id: 'retrievalStrategy',\n      name: 'Retrieval Strategy',\n      type: 'select',\n      options: ['exact', 'semantic', 'hybrid'],\n      default: 'hybrid'\n    }],\n    executor: [{\n      id: 'executionPriority',\n      name: 'Execution Priority',\n      type: 'number',\n      default: 5\n    }, {\n      id: 'parallelExecutions',\n      name: 'Parallel Executions',\n      type: 'number',\n      default: 1\n    }]\n  };\n\n  // Handle form field changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  // Handle role change and update parameter defaults\n  const handleRoleChange = e => {\n    const newRole = e.target.value;\n    const roleParams = {\n      ...formState.parameters\n    };\n\n    // Add default parameters for the new role\n    if (roleParameters[newRole]) {\n      roleParameters[newRole].forEach(param => {\n        if (!roleParams[param.id]) {\n          roleParams[param.id] = param.default;\n        }\n      });\n    }\n    setFormState({\n      ...formState,\n      role: newRole,\n      parameters: roleParams\n    });\n  };\n\n  // Handle parameter changes\n  const handleParameterChange = (paramId, value) => {\n    setFormState({\n      ...formState,\n      parameters: {\n        ...formState.parameters,\n        [paramId]: value\n      }\n    });\n  };\n\n  // Handle knowledge base change\n  const handleKnowledgeBaseChange = e => {\n    setFormState({\n      ...formState,\n      knowledgeBase: e.target.value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    onUpdate(formState);\n  };\n\n  // Get current role parameters\n  const currentRoleParams = roleParameters[formState.role] || [];\n  if (!agent) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-80 h-full border-l border-gray-200 bg-white overflow-y-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between p-4 border-b border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-medium\",\n        children: \"Agent Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-gray-500 hover:text-gray-700\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(X, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-sm font-medium text-gray-700 mb-3\",\n          children: \"Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: formState.name,\n            onChange: handleChange,\n            className: \"w-full p-2 border border-gray-300 rounded-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"role\",\n            name: \"role\",\n            value: formState.role,\n            onChange: handleRoleChange,\n            className: \"w-full p-2 border border-gray-300 rounded-md\",\n            children: roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: role.id,\n              children: role.name\n            }, role.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: (_roles$find = roles.find(r => r.id === formState.role)) === null || _roles$find === void 0 ? void 0 : _roles$find.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-sm font-medium text-gray-700 mb-3\",\n          children: \"Behavior Parameters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), currentRoleParams.length > 0 ? currentRoleParams.map(param => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: param.id,\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: param.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), param.type === 'select' ? /*#__PURE__*/_jsxDEV(\"select\", {\n            id: param.id,\n            value: formState.parameters[param.id] || param.default,\n            onChange: e => handleParameterChange(param.id, e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md\",\n            children: param.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option.charAt(0).toUpperCase() + option.slice(1)\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: param.type,\n            id: param.id,\n            value: formState.parameters[param.id] || param.default,\n            onChange: e => {\n              const value = param.type === 'number' ? parseFloat(e.target.value) : e.target.value;\n              handleParameterChange(param.id, value);\n            },\n            className: \"w-full p-2 border border-gray-300 rounded-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }, this)]\n        }, param.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500\",\n          children: \"No parameters available for this role.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-sm font-medium text-gray-700 mb-3\",\n          children: \"Knowledge Base\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"knowledgeBase\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Connect to Knowledge Base\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"knowledgeBase\",\n            value: formState.knowledgeBase || '',\n            onChange: handleKnowledgeBaseChange,\n            className: \"w-full p-2 border border-gray-300 rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), knowledgeBases.map(kb => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: kb.id,\n              children: kb.name\n            }, kb.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"px-4 py-2 mr-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"px-4 py-2 bg-blue-600 border border-transparent rounded-md text-sm font-medium text-white hover:bg-blue-700\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfigurationPanel, \"5A7R8jIDTGuWti0v3spkbZYeWhQ=\");\n_c = ConfigurationPanel;\nvar _c;\n$RefreshReg$(_c, \"ConfigurationPanel\");","map":{"version":3,"names":["React","useState","useEffect","X","jsxDEV","_jsxDEV","ConfigurationPanel","agent","onUpdate","onClose","_s","_roles$find","formState","setFormState","name","role","parameters","knowledgeBase","roles","id","description","knowledgeBases","roleParameters","explorer","type","default","planner","options","communicator","thinker","storage","executor","handleChange","e","value","target","handleRoleChange","newRole","roleParams","forEach","param","handleParameterChange","paramId","handleKnowledgeBaseChange","handleSubmit","preventDefault","currentRoleParams","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","onChange","map","find","r","length","option","charAt","toUpperCase","slice","parseFloat","kb","_c","$RefreshReg$"],"sources":["C:/Users/si.izzo/Desktop/multiagent-platform-ui/src/components/ConfigurationPanel.jsx"],"sourcesContent":["// components/ConfigurationPanel.jsx\nimport React, { useState, useEffect } from 'react';\nimport { X } from 'lucide-react';\n\nexport const ConfigurationPanel = ({ agent, onUpdate, onClose }) => {\n  const [formState, setFormState] = useState({\n    name: '',\n    role: '',\n    parameters: {},\n    knowledgeBase: null,\n  });\n\n  // Initialize form with agent data when selected agent changes\n  useEffect(() => {\n    if (agent) {\n      setFormState({\n        name: agent.name || '',\n        role: agent.role || 'explorer',\n        parameters: { ...agent.parameters } || {},\n        knowledgeBase: agent.knowledgeBase || null,\n      });\n    }\n  }, [agent]);\n\n  // Available agent roles\n  const roles = [\n    { id: 'explorer', name: 'Explorer', description: 'Searches for information and resources' },\n    { id: 'planner', name: 'Planner', description: 'Creates strategies and coordinates tasks' },\n    { id: 'communicator', name: 'Communicator', description: 'Interfaces with users and other agents' },\n    { id: 'thinker', name: 'Thinker', description: 'Analyzes data and makes decisions' },\n    { id: 'storage', name: 'Storage', description: 'Stores and retrieves knowledge' },\n    { id: 'executor', name: 'Executor', description: 'Performs actions in the environment' },\n  ];\n\n  // Available knowledge bases\n  const knowledgeBases = [\n    { id: 'general', name: 'General Knowledge' },\n    { id: 'specialized', name: 'Specialized Domain' },\n    { id: 'custom', name: 'Custom Database' },\n  ];\n\n  // Define parameter templates for each role\n  const roleParameters = {\n    explorer: [\n      { id: 'searchDepth', name: 'Search Depth', type: 'number', default: 3 },\n      { id: 'explorationRate', name: 'Exploration Rate', type: 'number', default: 0.7 },\n    ],\n    planner: [\n      { id: 'planningHorizon', name: 'Planning Horizon', type: 'number', default: 5 },\n      { id: 'optimizationGoal', name: 'Optimization Goal', type: 'select', \n        options: ['efficiency', 'accuracy', 'speed'], default: 'efficiency' },\n    ],\n    communicator: [\n      { id: 'messageFormat', name: 'Message Format', type: 'select', \n        options: ['json', 'text', 'binary'], default: 'json' },\n      { id: 'communicationFrequency', name: 'Communication Frequency', type: 'number', default: 1 },\n    ],\n    thinker: [\n      { id: 'reasoningDepth', name: 'Reasoning Depth', type: 'number', default: 3 },\n      { id: 'confidenceThreshold', name: 'Confidence Threshold', type: 'number', default: 0.8 },\n    ],\n    storage: [\n      { id: 'storageCapacity', name: 'Storage Capacity', type: 'number', default: 1000 },\n      { id: 'retrievalStrategy', name: 'Retrieval Strategy', type: 'select', \n        options: ['exact', 'semantic', 'hybrid'], default: 'hybrid' },\n    ],\n    executor: [\n      { id: 'executionPriority', name: 'Execution Priority', type: 'number', default: 5 },\n      { id: 'parallelExecutions', name: 'Parallel Executions', type: 'number', default: 1 },\n    ],\n  };\n\n  // Handle form field changes\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // Handle role change and update parameter defaults\n  const handleRoleChange = (e) => {\n    const newRole = e.target.value;\n    const roleParams = { ...formState.parameters };\n    \n    // Add default parameters for the new role\n    if (roleParameters[newRole]) {\n      roleParameters[newRole].forEach(param => {\n        if (!roleParams[param.id]) {\n          roleParams[param.id] = param.default;\n        }\n      });\n    }\n    \n    setFormState({\n      ...formState,\n      role: newRole,\n      parameters: roleParams,\n    });\n  };\n\n  // Handle parameter changes\n  const handleParameterChange = (paramId, value) => {\n    setFormState({\n      ...formState,\n      parameters: {\n        ...formState.parameters,\n        [paramId]: value,\n      },\n    });\n  };\n\n  // Handle knowledge base change\n  const handleKnowledgeBaseChange = (e) => {\n    setFormState({\n      ...formState,\n      knowledgeBase: e.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdate(formState);\n  };\n\n  // Get current role parameters\n  const currentRoleParams = roleParameters[formState.role] || [];\n\n  if (!agent) return null;\n\n  return (\n    <div className=\"w-80 h-full border-l border-gray-200 bg-white overflow-y-auto\">\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n        <h2 className=\"text-lg font-medium\">Agent Configuration</h2>\n        <button\n          className=\"text-gray-500 hover:text-gray-700\"\n          onClick={onClose}\n        >\n          <X className=\"w-5 h-5\" />\n        </button>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"p-4\">\n        {/* Basic Information */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Basic Information</h3>\n          \n          <div className=\"mb-4\">\n            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formState.name}\n              onChange={handleChange}\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\n            />\n          </div>\n          \n          <div className=\"mb-4\">\n            <label htmlFor=\"role\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Role\n            </label>\n            <select\n              id=\"role\"\n              name=\"role\"\n              value={formState.role}\n              onChange={handleRoleChange}\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\n            >\n              {roles.map(role => (\n                <option key={role.id} value={role.id}>\n                  {role.name}\n                </option>\n              ))}\n            </select>\n            <p className=\"text-xs text-gray-500 mt-1\">\n              {roles.find(r => r.id === formState.role)?.description}\n            </p>\n          </div>\n        </div>\n        \n        {/* Parameters */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Behavior Parameters</h3>\n          \n          {currentRoleParams.length > 0 ? (\n            currentRoleParams.map(param => (\n              <div key={param.id} className=\"mb-4\">\n                <label htmlFor={param.id} className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {param.name}\n                </label>\n                \n                {param.type === 'select' ? (\n                  <select\n                    id={param.id}\n                    value={formState.parameters[param.id] || param.default}\n                    onChange={(e) => handleParameterChange(param.id, e.target.value)}\n                    className=\"w-full p-2 border border-gray-300 rounded-md\"\n                  >\n                    {param.options.map(option => (\n                      <option key={option} value={option}>\n                        {option.charAt(0).toUpperCase() + option.slice(1)}\n                      </option>\n                    ))}\n                  </select>\n                ) : (\n                  <input\n                    type={param.type}\n                    id={param.id}\n                    value={formState.parameters[param.id] || param.default}\n                    onChange={(e) => {\n                      const value = param.type === 'number' \n                        ? parseFloat(e.target.value) \n                        : e.target.value;\n                      handleParameterChange(param.id, value);\n                    }}\n                    className=\"w-full p-2 border border-gray-300 rounded-md\"\n                  />\n                )}\n              </div>\n            ))\n          ) : (\n            <p className=\"text-sm text-gray-500\">No parameters available for this role.</p>\n          )}\n        </div>\n        \n        {/* Knowledge Base */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Knowledge Base</h3>\n          \n          <div className=\"mb-4\">\n            <label htmlFor=\"knowledgeBase\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Connect to Knowledge Base\n            </label>\n            <select\n              id=\"knowledgeBase\"\n              value={formState.knowledgeBase || ''}\n              onChange={handleKnowledgeBaseChange}\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\n            >\n              <option value=\"\">None</option>\n              {knowledgeBases.map(kb => (\n                <option key={kb.id} value={kb.id}>\n                  {kb.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        \n        {/* Actions */}\n        <div className=\"flex justify-end\">\n          <button\n            type=\"button\"\n            className=\"px-4 py-2 mr-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n            onClick={onClose}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-blue-600 border border-transparent rounded-md text-sm font-medium text-white hover:bg-blue-700\"\n          >\n            Save Changes\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}